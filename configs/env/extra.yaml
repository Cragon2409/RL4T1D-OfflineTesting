# additional features which may be used for algorithms,
#use_meal_announcement: False  # adds meal announcement as a timeseries feature.
#use_carb_announcement: False
#use_tod_announcement: False
#
#use_bolus: True
#expert_bolus: False
#use_cf: False  # param for BB
#expert_cf: False

## re-organise following additional info.
# fixed "HARD" benchmark scenario
# self.parser.add_argument('--meal_prob', type=list, default=[1, -1, 1, -1, 1, -1], help='')
# self.parser.add_argument('--meal_amount', type=list, default=[45, 30, 85, 30, 80, 30], help='')
# self.parser.add_argument('--meal_variance', type=list, default=[1e-8, 1e-8, 1e-8, 1e-8, 1e-8, 1e-8], help='')
# self.parser.add_argument('--time_variance', type=list, default=[1e-8, 1e-8, 1e-8, 1e-8, 1e-8, 1e-8], help='in mins')

# Fixed "EASY" benchmark scenario: manual control SBB
# self.parser.add_argument('--meal_prob', type=list, default=[1, -1, 1, -1, 1, -1], help='')
# self.parser.add_argument('--meal_amount', type=list, default=[40, 20, 80, 10, 60, 30], help='')
# self.parser.add_argument('--meal_variance', type=list, default=[1e-8, 1e-8, 1e-8, 1e-8, 1e-8, 1e-8], help='')
# self.parser.add_argument('--time_variance', type=list, default=[1e-8, 1e-8, 1e-8, 1e-8, 1e-8, 1e-8], help='in mins')

# parameters for children
# self.parser.add_argument('--meal_amount', type=list, default=[30, 15, 45, 15, 45, 15], help='')
# self.parser.add_argument('--meal_variance', type=list, default=[5, 3, 5, 3, 5, 3], help='')

# Elena paper meal: Breakfast 30-60g, Lunch 70-100g, Dinner 70-110g, Snack 20-40g
# June9 exp run: Breakfast 45 (10), Lunch 100 (10, Dinner 90 (1), Snack 10(5)
